plugins {
    id 'dev.architectury.loom' version "1.0.+"
    id 'io.github.juuxel.loom-quiltflower' version "1.8.0"
    id 'maven-publish'
}

archivesBaseName = project.archives_base_name
group = project.maven_group
version = project.mod_version

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

loom {
    runs {
        testmodClient {
            client()
            name = "Testmod Client"
            source sourceSets.testmod
        }
    }
}

repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modCompileOnly ("maven.modrinth:oculus:${project.iris_version}")

    compileOnly "org.jetbrains:annotations:${jb_annotations_version}"
    compileOnly "com.google.code.findbugs:jsr305:${findbugs_version}"
    compileOnly "org.apiguardian:apiguardian-api:${apiguardian_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.0-M1"

    testmodCompileOnly "org.jetbrains:annotations:${jb_annotations_version}"
    testmodImplementation sourceSets.main.output
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

loom {
    accessWidenerPath = file("src/main/resources/satin.accesswidener")

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfigs = [
                "mixins.satin.client.json"
        ]
    }
}

quiltflower {
    addToRuntimeClasspath.set(true)
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "ConstructLegacy"
            url = "https://repo.constructlegacy.ru/public"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}